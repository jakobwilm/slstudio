include_directories(${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR}
        ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/src/camera)

if(WITH_CAMERAXIMEA)
    include("${CMAKE_SOURCE_DIR}/cmake/FindXimea.cmake")
    if(XIMEA_FOUND)
        if(APPLE)
            FIND_LIBRARY(XIMEA_LIBRARY NAMES m3api)
            FIND_PATH(XIMEA_PATH xiApi.h)
        else()
            set(XIMEA_LIBRARY xiapi64)
        endif()
        include_directories(${XIMEA_PATH})
        add_library(XimeaCamera STATIC CameraXIMEA.cpp CameraXIMEA.h)
        add_definitions(-DWITH_CAMERAXIMEA)
        set(DEVICE_LIBS ${DEVICE_LIBS} XimeaCamera ${IDS_LIBRARY} PARENT_SCOPE)
    else(XIMEA_FOUND)
        message(SEND_ERROR "Could not find Ximea camera support.")
    endif(XIMEA_FOUND)
endif(WITH_CAMERAXIMEA)

if(WITH_CAMERAIDSIMAGING)
    include("${CMAKE_SOURCE_DIR}/cmake/FindIds.cmake")
    if(IDS_FOUND)
        include_directories(${IDS_PATH})
        add_library(IdsCamera STATIC CameraIDSImaging.cpp CameraIDSImaging.h)
        add_definitions(-DWITH_CAMERAIDSIMAGING)
        set(DEVICE_LIBS ${DEVICE_LIBS} IdsCamera ${IDS_LIBRARY} PARENT_SCOPE)
    else(IDS_FOUND)
        message(SEND_ERROR "Could not find IDS uEye camera support.")
    endif(IDS_FOUND)
endif(WITH_CAMERAIDSIMAGING)

if(WITH_CAMERAIDC)
    add_library(IdcCamera STATIC CameraIIDC.cpp CameraIIDC.h)
    add_definitions(-DWITH_CAMERAIDC)
    set(DEVICE_LIBS ${DEVICE_LIBS} IdcCamera PARENT_SCOPE)
endif(WITH_CAMERAIDC)

if(WITH_CAMERAPOINTGREY)
    include("${CMAKE_SOURCE_DIR}/cmake/FindPointGrey.cmake")
    if(POINTGREY_FOUND)
        include_directories(${POINTGREY_PATH})
        add_library(PointGreyCamera STATIC CameraPointGrey.cpp CameraPointGrey.h)
        add_definitions(-DWITH_CAMERAPOINTGREY)
        set(DEVICE_LIBS ${DEVICE_LIBS} PointGreyCamera ${POINTGREY_LIBRARY} PARENT_SCOPE)
    else(POINTGREY_FOUND)
        message(SEND_ERROR "Could not find PointGrey camera camera support.")
    endif(POINTGREY_FOUND)
endif(WITH_CAMERAPOINTGREY)

if(WITH_CAMERAV4L)
    add_library(V4LCamera STATIC CameraV4L.cpp CameraV4L.cpp)
    add_definitions(-DWITH_CAMERAV4L)
    set(DEVICE_LIBS ${DEVICE_LIBS} V4LCamera PARENT_SCOPE)
endif(WITH_CAMERAV4L)

if(WITH_CAMERAOPENCV)
    add_library(OpenCvCamera STATIC CameraOpenCV.cpp CameraOpenCV.h)
    add_definitions(-DWITH_CAMERAOPENCV)
    set(DEVICE_LIBS ${DEVICE_LIBS} OpenCvCamera ${POINTGREY_LIBRARY} PARENT_SCOPE)
endif(WITH_CAMERAOPENCV)