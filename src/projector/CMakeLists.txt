include_directories(${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR}
        ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/src/projector)
set(DEVICE_LIBS)
set(DEVICE_DEFS)
set(H_FILES Projector.h)
set(CPP_FILES Projector.cpp)

if(WITH_LC4500API)
    set(CPP_FILES ${CPP_FILES} ProjectorLC4500.cpp LC4500API/API.cpp LC4500API/usb.cpp)
    if(APPLE)
        set(CPP_FILES ${CPP_FILES} LC4500API/hid.Mac.c)
    elseif(WIN32)
        set(CPP_FILES ${CPP_FILES} LC4500API/hid.Win.c)
    else()
        set(CPP_FILES ${CPP_FILES} LC4500API/hid.Libusb.c)
    endif()
    set(H_FILES ${H_FILES} LC4500API/API.h)
    set(DEVICE_DEFS ${DEVICE_DEFS} -DWITH_LC4500API)

    if(WIN32)
        set(PROJ4500_LIBS setupapi)
    endif(WIN32)
endif(WITH_LC4500API)

if(WITH_LC3000API)
    set(CPP_FILES ${CPP_FILES} ProjectorLC3000.cpp LC3000API/lcr_cmd.cpp
            LC3000API/lcr_packetizer.cpp LC3000API/tcp_client.cpp)
    set(H_FILES ${H_FILES} LC3000API/lcr_cmd.h)
    set(DEVICE_DEFS ${DEVICE_DEFS} -DWITH_LC3000API)
endif(WITH_LC3000API)

set(DEVICE_LIBS ${DEVICE_LIBS} ${PROJ4500_LIBS} ${PROJ3000_LIBS})

if(WITH_PROJECTOROPENGL)
    # Compile with system dependent OpenGL Context code
    if(APPLE)
        set(OPENGL_CONTEXT_CPP OpenGLContext.Mac.mm)
    elseif(WIN32)
        set(OPENGL_CONTEXT_CPP OpenGLContext.Win.cpp)
        add_definitions(-DWIN32 -D_UNICODE -DUNICODE)
    else()
        set(OPENGL_CONTEXT_CPP OpenGLContext.Unix.cpp)
    endif()
    
    set(CPP_FILES ${CPP_FILES} ProjectorOpenGL.cpp ${OPENGL_CONTEXT_CPP})
    set(H_FILES ${H_FILES} ProjectorOpenGL.h OpenGLContext.h)
    set(DEVICE_LIBS ${DEVICE_LIBS} ${OPENGL_LIBRARIES} ${GLEW_LIBRARY})
    set(DEVICE_DEFS ${DEVICE_DEFS} -DWITH_PROJECTOROPENGL)
endif(WITH_PROJECTOROPENGL)

if(WITH_PROJECTORQT)
    qt4_wrap_cpp(MOCSrcs ProjectorQtGL.h)
    set(CPP_FILES ${CPP_FILES} ProjectorQtGL.cpp ${MOCSrcs})
    set(H_FILES ${H_FILES} ProjectorQtGL.h OpenGLContext.h)
    set(DEVICE_DEFS ${DEVICE_DEFS} -DWITH_PROJECTORQT)
endif(WITH_PROJECTORQT)

set(PROJECTOR_DEVICE_LIBS ${DEVICE_LIBS} PARENT_SCOPE)
set(PROJECTOR_DEVICE_DEFS ${DEVICE_DEFS} PARENT_SCOPE)

add_compiler_export_flags()
add_definitions(${DEVICE_DEFS})
add_library(slprojector SHARED ${H_FILES} ${CPP_FILES})
generate_export_header(slprojector)
target_link_libraries(slprojector ${DEVICE_LIBS})

if(VTK_QT_VERSION VERSION_GREATER "4")
    qt5_use_modules(slprojector Core OpenGL)
else(VTK_QT_VERSION VERSION_GREATER "4")
    target_link_libraries(slprojector Qt4::QtCore Qt4::QtOpenGL)
endif(VTK_QT_VERSION VERSION_GREATER "4")
